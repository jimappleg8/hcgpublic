
If you want nicer URLs (without question marks) for your Wiki, then follow
the instructions below on how to set this up with the Apache web server.


ModRewriteUrls
--------------

If you want more beatiful URLs (!http://wiki.example.com/PageName) to all
your Wiki pages, you can either use the PathInfoUrls method or leverage the
power of the Apache mod_rewrite extension.

==fragments/htaccess== provides an examplary setup. Typically it goes
by putting something like this into a .htaccess file near your ewiki
script/wrapper installation:

  RewriteEngine On
  #-- let ordinary files pass through
  RewriteCond  %{SCRIPT_FILENAME}  !-f
  RewriteCond  %{SCRIPT_FILENAME}  !-d
  RewriteCond  %{SCRIPT_FILENAME}  !-l
  #-- every other 'filename' is however treated as page name
  RewriteRule  ^(.+)$  index.php?id=$1  [L,QSA]

So then you can set the [EWIKI_SCRIPT] config constant to the right value,
using ==define("EWIKI_SCRIPT", "/wiki/");== for example. Please keep in
mind, that it should be absolute (a slash in front), because pagenames may
contain slashes and action names get prefixed using a slash too.

  define("EWIKI_SCRIPT", "/wiki/");
# define("EWIKI_USE_ACTION_PARAM", 2);  // forces ?action= param
# define("EWIKI_ACTION_TAKE_ASIS", 0);  // in conjunction with this

There are more paramters, that you might want/need to tweak (_URLENCODE
and EWIKI_DECODE for example). Please refer to the [README.config] on this.


virtual /wiki/ directory
------------------------

The most reliable approach to get non-ugly URLs for ewiki is to use
a fully virtual (= simulated by mod_rewrite) path name to access
Wiki pages.

This example assumes you install ewiki into the DOCUMENT_ROOT
of yourserver. You should then put all ewiki files in a directory
named "ewiki". Into the .htaccess file of the DOC_ROOT directory
you'd put following:

<code>
  RewriteEngine On
  RewriteRule  ^wiki/(.*)$  ewiki/index.php?id=$1  [QSA,L]
  RewriteRule  ^wiki$       wiki/                  [R]
 #RewriteRule  ^wiki$    http://example.com/wiki/  [R=301,L]
</code>

So all pages can be accessed under the fake ==/wiki/== directory, while
ewiki files are actually in ==ewiki/==. The last rule should use the
absolute URL preferrably.

You then would configure ewiki URL and link generation accordingly in our
hypothetic ==ewiki/index.php== script:

<code>
   define("EWIKI_SCRIPT", "/wiki/");
   define("EWIKI_SCRIPT_URL", "http://www.example.com/wiki/");
   define("EWIKI_SCRIPT_BINARY", "/ewiki/index.php?binary=");
</code>

Please note the difference between _SCRIPT and _SCRIPT_BINARY (if
you need it at all).


PathInfoUrls
------------

Typically ewiki URLs will look like:

* ~[/wiki/index.php?id=FrontPage]
* ~[/wiki/index.php?id=RecentChanges]

If you can't use ModRewriteUrls, then you may wish to set the config
constant [EWIKI_SCRIPT] to something like "==/wiki/index.php/==" so you get
almost beatiful URLs to all Wiki pages:

* ~[/wiki/index.php/FrontPage]
* ~[/wiki/index.php/RecentChanges]

If you also have the permissions (providers often make this unusable for
silly reasons) to override some Apache settings, then you could put 
"==**Options All +MultiViews**==" into your .htaccess file. This way the
URLs would further beautify to;

* ~[/wiki/index/FrontPage]
* ~[/wiki/index/RecentChanges]

Alternatively try to create an Apache .var file (index.var which maps to
index.php itself). See the ApacheManual for more informations on this
issue.


simple wiki/ support
--------------------

If all of the above sounds still too complicated for you, or mod_rewrite is
not available then you could use the following trick to get prettier URLs.

Rename your yoursite.php or "index.php" to just "wiki", and create a file
called ".htaccess" in the same directory with following content:

  <Files wiki>
    ForceType application/x-httpd-php
  </Files>
  
This will trick Apache into parsing it as PHP script, even though the file
has no extension anymore.

Add following to your config.php or above script:

  define("EWIKI_SCRIPT", "wiki/");
  
This works like the PathInfoUrls or virtual mod_rewrite directory as
described above.

