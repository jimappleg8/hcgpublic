<?php // =========================================================================//  db_functions.php//  part of hcgPublic//  written by Jim Applegate & Jeff Schroeder////  The functions in this module are mostly just calls to the ADODB methods//  with the added steps of choosing the correct database settings from the//  config file. I've tried to make it so that the functions here produce//  the same results that their ADODB counterparts do. See the ADODB docs//  for more information.////  Not all possible ADODB methods are listed here. I'm adding them as they //  are needed.//// =========================================================================require_once("mod_core/core.fns.php");// ------------------------------------------------------------------------// db_Connect([$db])//// Connects to the specified database as defined in the $_HCG_GLOBAL["db"] // array. If no database is specified, the system will attempt to use the// "current" database. Returns the name of the database if the connection// succeeded.//// ------------------------------------------------------------------------function db_Connect($db = ""){  # Error-checking.  global $_HCG_GLOBAL;  if(!$db) $db = $_HCG_GLOBAL["db"]["current"];  if(!isset($_HCG_GLOBAL["db"][$db]))  {    event("Unable to determine database connection information for " .      ($db ? "database '$db'" : "unspecified database") . "!", "error");    return "";  }  if($_HCG_GLOBAL["db"][$db]["link"]) return $db; # Already connected.  # Load the ADOdb classes.  include_once($_HCG_GLOBAL['adodb_dir'] . '/adodb.inc.php');  # Connect to the database.  if($_HCG_GLOBAL["db"][$db]["link"] =    &ADONewConnection($_HCG_GLOBAL["db"][$db]["type"]))  {    $_HCG_GLOBAL["db"][$db]["link"]->connect(      $_HCG_GLOBAL["db"][$db]["host"],      $_HCG_GLOBAL["db"][$db]["user"],      $_HCG_GLOBAL["db"][$db]["pass"],      $_HCG_GLOBAL["db"][$db]["name"]);    $_HCG_GLOBAL["db"][$db]["link"]->SetFetchMode(ADODB_FETCH_NUM);    $_HCG_GLOBAL["db"]["current"] = $db;    return $db;  }  else  {    event("Unable to connect to database '$db'!", "error");    return "";  }}// ------------------------------------------------------------------------// db_ErrorMsg([$db])//// Returns the last status or error message from the database specified. // If no database is specified, the "current" one is used. This can return // a string even if no error occurs. In general you do not need to call // this function unless an ADODB function returns false on an error.//// See the ADODB documentation for more information.//// ------------------------------------------------------------------------function db_ErrorMsg($db = ""){   global $_HCG_GLOBAL;   $db = db_Connect($db);   $link = &$_HCG_GLOBAL["db"][$db]["link"];   $r = &$link->ErrorMsg();   return $r;}// ------------------------------------------------------------------------// db_Execute($query, [$db])//// Execute SQL statement $query on the specified database and return //  derived class of ADORecordSet if successful. Note that a record set//  is always returned on success, even if we are executing an insert or //  update statement. If no database is specified, the "current" one is //  used.//// See the ADODB documentation for more information.//// ------------------------------------------------------------------------function db_Execute($query, $db = ""){   global $_HCG_GLOBAL;   $db = db_Connect($db);   $link = &$_HCG_GLOBAL["db"][$db]["link"];   $r = &$link->Execute($query);   return $r;}// ------------------------------------------------------------------------// db_GetAll($query, [$db])//// Executes the SQL on the specified database and returns all the rows // as a two-dimensional array. If no database is specified, the "current"// database is used. The recordset is discarded for you automatically. If // an error occurs, false is returned.//// Depending on the value of $ADODB_FETCH_MODE, the resulting array will be// either a numbered or associative array. The default is a numbered array.//// ------------------------------------------------------------------------function db_GetAll($query, $db = ""){   global $_HCG_GLOBAL;   $db = db_Connect($db);   $link = &$_HCG_GLOBAL["db"][$db]["link"];     $r = &$link->GetAll($query);     return $r;}// ------------------------------------------------------------------------// db_GetRow($query, [$db])//// Executes the SQL on the specified database and returns the first row as // an array. If no database is specified, the "current" database is used.// The recordset and remaining rows are discarded for you automatically.// If an error occurs, false is returned.//// Depending on the value of $ADODB_FETCH_MODE, the resulting array will be// either a numbered or associative array. The default is a numbered array.//// ------------------------------------------------------------------------function db_GetRow($query, $db = ""){   global $_HCG_GLOBAL;   $db = db_Connect($db);   $link = &$_HCG_GLOBAL["db"][$db]["link"];   $r = &$link->GetRow($query);   return $r;}// ------------------------------------------------------------------------// db_GetCol($query, [$db])//// Executes the SQL on the specified database and returns all elements of // the first column as a 1-dimensional array. If no database is specified, // the "current" database is used. The recordset is discarded for you// automatically. If an error occurs, false is returned.//// Depending on the value of $ADODB_FETCH_MODE, the resulting array will be// either a numbered or associative array. The default is a numbered array.//// ------------------------------------------------------------------------function db_GetCol($query, $db = ""){   global $_HCG_GLOBAL;   $db = db_Connect($db);   $link = &$_HCG_GLOBAL["db"][$db]["link"];   $r = &$link->GetCol($query);   return $r;}// ------------------------------------------------------------------------// db_MetaTables([$db])//// Returns an array of tables and views for the current database as an// array. The array should excludesystem catalog tables if possible.//// ------------------------------------------------------------------------function db_MetaTables($db = ""){   global $_HCG_GLOBAL;   $db = db_Connect($db);   $link = &$_HCG_GLOBAL["db"][$db]["link"];   $r = &$link->MetaTables();   return $r;}// ------------------------------------------------------------------------// db_SetFetchMode($mode, [$db])//// Sets the current fetch mode for the specified databse connection and // stores it in $db->fetchMode. If no database is specified, the "current"// database is used. Legal modes are ADODB_FETCH_ASSOC and ADODB_FETCH_NUM.//// These modes are constants that are set in the ADODB class, which must// be loaded before calling this function. If you have previously called// db_Connect, you should be fine. The default setting is ADODB_FETCH_NUM.//// See the ADODB documentation for more information.//// ------------------------------------------------------------------------function db_SetFetchMode($mode, $db = ""){   global $_HCG_GLOBAL;   $db = db_Connect($db);   $link = &$_HCG_GLOBAL["db"][$db]["link"];   $r = &$link->SetFetchMode($mode);   return $r;}// ======================== DEPRECATED FUNCTIONS ==========================// ------------------------------------------------------------------------// This function is being deprecated. You should use the db_Execute() // function in its place.//// db_query()//// ------------------------------------------------------------------------function db_query($query, $db = ""){  global $_HCG_GLOBAL;  $db = db_connect($db);  // Run the query.  $link = &$_HCG_GLOBAL["db"][$db]["link"];  if(!($r = &$link->execute($query)))    event("Query \"$query\" on database \"$db\" failed (" .    $link->errormsg() . ")!", "error");}// ------------------------------------------------------------------------// This function is being deprecated//// db_query_array()//// Retrieve a query result-set as an array of arrays.//// query - the SQL query to run.  Each row in the result-set is returned as//         an array of columns.//// db    - the name of the database to use, or nothing to use the//         current one.//// ------------------------------------------------------------------------function db_query_array($query, $db = ""){  global $_HCG_GLOBAL;  $db = db_connect($db);  // Run the query and load the result-set into an array.  $out = array();  $link = &$_HCG_GLOBAL["db"][$db]["link"];  if($r = &$link->execute($query))  do { if(isset($r->fields[0])) array_push($out, $r->fields); }    while($r->movenext());  else event("Query \"$query\" on database \"$db\" failed (" .    $link->errormsg() . ")!", "error");  return $out;}// ------------------------------------------------------------------------// This function is being deprecated. Use the following two statements//  in its place:    db_SetFetchMode(ADODB_FETCH_ASSOC);//                   db_GetAll($query);//// db_query_hash()//// Retrieve a query result-set as a hashed (associative) array.//// query - the SQL query to run.  Results are returned in an associative//         array where the key is the first column and the value is the//         second.//// db    - the name of the database to use, or nothing to use the//         current one.//// ------------------------------------------------------------------------function db_query_hash($query, $db = ""){  global $_HCG_GLOBAL;  $db = db_connect($db);  // Run the query and load the result-set into an array.  $out = array();  $link = &$_HCG_GLOBAL["db"][$db]["link"];  if($r = &$link->execute($query))    do { $out{$r->fields[0]} = $r->fields[1]; } while($r->movenext());  else event("Query \"$query\" on database \"$db\" failed (" .    $link->errormsg() . ")!", "error");  return $out;}// ------------------------------------------------------------------------// This function is being deprecated//// db_query_item()//// Retrieve one item from a query result-set.  It will only retrieve the// first field of the first row returned.//// query - the SQL query to run.//// db    - the name of the database to use, or nothing to use the//         current one.//// ------------------------------------------------------------------------function db_query_item($query, $db = ""){  global $_HCG_GLOBAL;  $db = db_connect($db);  // Run the query and load the first field of the first row.  $out = "";  $link = &$_HCG_GLOBAL["db"][$db]["link"];  if($r = &$link->execute($query))    do { $out = $r->fields[0]; } while($r->movenext());  else event("Query \"$query\" on database \"$db\" failed (" .    $link->errormsg() . ")!", "error");  return $out;}?>